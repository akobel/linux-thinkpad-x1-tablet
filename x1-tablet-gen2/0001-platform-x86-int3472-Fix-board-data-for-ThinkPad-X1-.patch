From 03614c0a0c96d18de3f68170c2a34476b95dfb0a Mon Sep 17 00:00:00 2001
From: Alexander Kobel <a-kobel@a-kobel.de>
Date: Sun, 1 May 2022 13:37:39 +0200
Subject: [PATCH 1/2] platform/x86: int3472: Fix board data for ThinkPad X1
 Tablet Gen 2

Lenovo's ThinkPad X1 Tablet Gen 1 and Gen 2 need different settings to
describe the regulators for their camera sensors.  This patch corrects a
few issues:
- Fix the settings for Gen 2 (for enabling the front camera OV2740),
- Change the identifiers to stress that those match Gen 2, and
- Adjust the matching to rely on DMI_PRODUCT_FAMILY rather than
  DMI_PRODUCT_NAME to get compatibility across the 20JB and 20JC range of
  serial numbers of those models.

Signed-off-by: Alexander Kobel <a-kobel@a-kobel.de>
---
 .../x86/intel/int3472/tps68470_board_data.c   | 50 +++++++++----------
 1 file changed, 25 insertions(+), 25 deletions(-)

diff --git a/drivers/platform/x86/intel/int3472/tps68470_board_data.c b/drivers/platform/x86/intel/int3472/tps68470_board_data.c
index 33771f6708e6..d5d45eeb326d 100644
--- a/drivers/platform/x86/intel/int3472/tps68470_board_data.c
+++ b/drivers/platform/x86/intel/int3472/tps68470_board_data.c
@@ -139,62 +139,62 @@ static const struct int3472_tps68470_board_data surface_go3_tps68470_board_data
 	}
 };
 
-/* Lenovo Thinkpad X1 */
+/* Lenovo Thinkpad X1 Tablet Gen2 */
 
-static struct regulator_consumer_supply thinkpad_x1_int3474_vsio_consumer_supplies[] = {
+static struct regulator_consumer_supply thinkpad_x1_tablet_gen2_int3474_vsio_consumer_supplies[] = {
 	REGULATOR_SUPPLY("dovdd", "i2c-INT3474:01"),
 };
 
-static struct regulator_consumer_supply thinkpad_x1_int3474_aux1_consumer_supplies[] = {
+static struct regulator_consumer_supply thinkpad_x1_tablet_gen2_int3474_aux1_consumer_supplies[] = {
 	REGULATOR_SUPPLY("dvdd", "i2c-INT3474:01"),
 };
 
-static struct regulator_consumer_supply thinkpad_x1_int3474_aux2_consumer_supplies[] = {
+static struct regulator_consumer_supply thinkpad_x1_tablet_gen2_int3474_aux2_consumer_supplies[] = {
 	REGULATOR_SUPPLY("avdd", "i2c-INT3474:01"),
 };
 
-static const struct regulator_init_data thinkpad_x1_tps68470_vsio_reg_init_data = {
+static const struct regulator_init_data thinkpad_x1_tablet_gen2_tps68470_vsio_reg_init_data = {
 	.constraints = {
 		.min_uV = 1800600,
 		.max_uV = 1800600,
 		.apply_uV = 1,
 		.valid_ops_mask = REGULATOR_CHANGE_STATUS,
 	},
-	.num_consumer_supplies = ARRAY_SIZE(thinkpad_x1_int3474_vsio_consumer_supplies),
-	.consumer_supplies = thinkpad_x1_int3474_vsio_consumer_supplies,
+	.num_consumer_supplies = ARRAY_SIZE(thinkpad_x1_tablet_gen2_int3474_vsio_consumer_supplies),
+	.consumer_supplies = thinkpad_x1_tablet_gen2_int3474_vsio_consumer_supplies,
 };
 
-static const struct regulator_init_data thinkpad_x1_tps68470_aux1_reg_init_data = {
+static const struct regulator_init_data thinkpad_x1_tablet_gen2_tps68470_aux1_reg_init_data = {
 	.constraints = {
 		.min_uV = 1213200,
 		.max_uV = 1213200,
 		.apply_uV = 1,
 		.valid_ops_mask = REGULATOR_CHANGE_STATUS,
 	},
-	.num_consumer_supplies = ARRAY_SIZE(thinkpad_x1_int3474_aux1_consumer_supplies),
-	.consumer_supplies = thinkpad_x1_int3474_aux1_consumer_supplies,
+	.num_consumer_supplies = ARRAY_SIZE(thinkpad_x1_tablet_gen2_int3474_aux1_consumer_supplies),
+	.consumer_supplies = thinkpad_x1_tablet_gen2_int3474_aux1_consumer_supplies,
 };
 
-static const struct regulator_init_data thinkpad_x1_tps68470_aux2_reg_init_data = {
+static const struct regulator_init_data thinkpad_x1_tablet_gen2_tps68470_aux2_reg_init_data = {
 	.constraints = {
 		.min_uV = 1800600,
 		.max_uV = 1800600,
 		.apply_uV = 1,
 		.valid_ops_mask = REGULATOR_CHANGE_STATUS,
 	},
-	.num_consumer_supplies = ARRAY_SIZE(thinkpad_x1_int3474_aux2_consumer_supplies),
-	.consumer_supplies = thinkpad_x1_int3474_aux2_consumer_supplies,
+	.num_consumer_supplies = ARRAY_SIZE(thinkpad_x1_tablet_gen2_int3474_aux2_consumer_supplies),
+	.consumer_supplies = thinkpad_x1_tablet_gen2_int3474_aux2_consumer_supplies,
 };
 
-static const struct tps68470_regulator_platform_data thinkpad_x1_tps68470_pdata = {
+static const struct tps68470_regulator_platform_data thinkpad_x1_tablet_gen2_tps68470_pdata = {
 	.reg_init_data = {
-		[TPS68470_VSIO] = &thinkpad_x1_tps68470_vsio_reg_init_data,
-		[TPS68470_AUX1] = &thinkpad_x1_tps68470_aux1_reg_init_data,
-		[TPS68470_AUX2] = &thinkpad_x1_tps68470_aux2_reg_init_data,
+		[TPS68470_VSIO] = &thinkpad_x1_tablet_gen2_tps68470_vsio_reg_init_data,
+		[TPS68470_AUX1] = &thinkpad_x1_tablet_gen2_tps68470_aux1_reg_init_data,
+		[TPS68470_AUX2] = &thinkpad_x1_tablet_gen2_tps68470_aux2_reg_init_data,
 	}
 };
 
-static struct gpiod_lookup_table thinkpad_x1_int3474_gpios = {
+static struct gpiod_lookup_table thinkpad_x1_tablet_gen2_int3474_gpios = {
 	.dev_id = "i2c-INT3474:01",
 	.table = {
 		GPIO_LOOKUP("tps68470-gpio", 4, "reset", GPIO_ACTIVE_LOW),
@@ -204,12 +204,12 @@ static struct gpiod_lookup_table thinkpad_x1_int3474_gpios = {
 	}
 };
 
-static const struct int3472_tps68470_board_data thinkpad_x1_tps68470_board_data = {
-	.dev_name = "i2c-INT3474:01",
-	.tps68470_regulator_pdata = &thinkpad_x1_tps68470_pdata,
+static const struct int3472_tps68470_board_data thinkpad_x1_tablet_gen2_tps68470_board_data = {
+	.dev_name = "i2c-INT3472:05",
+	.tps68470_regulator_pdata = &thinkpad_x1_tablet_gen2_tps68470_pdata,
 	.n_gpiod_lookups = 1,
 	.tps68470_gpio_lookup_tables = {
-		&thinkpad_x1_int3474_gpios,
+		&thinkpad_x1_tablet_gen2_int3474_gpios,
 	}
 };
 
@@ -238,9 +238,9 @@ static const struct dmi_system_id int3472_tps68470_board_data_table[] = {
 	{
 		.matches = {
 			DMI_EXACT_MATCH(DMI_SYS_VENDOR, "LENOVO"),
-			DMI_EXACT_MATCH(DMI_PRODUCT_NAME, "20JCS00C00"),
+			DMI_EXACT_MATCH(DMI_PRODUCT_FAMILY, "ThinkPad X1 Tablet Gen 2"),
 		},
-		.driver_data = (void *)&thinkpad_x1_tps68470_board_data,
+		.driver_data = (void *)&thinkpad_x1_tablet_gen2_tps68470_board_data,
 	},
 	{ }
 };
@@ -251,7 +251,7 @@ const struct int3472_tps68470_board_data *int3472_tps68470_get_board_data(const
 	const struct dmi_system_id *match;
 
 	match = dmi_first_match(int3472_tps68470_board_data_table);
-	while (match) {
+	while (match && match->driver_data) {
 		board_data = match->driver_data;
 		if (strcmp(board_data->dev_name, dev_name) == 0)
 			return board_data;
-- 
2.36.0

